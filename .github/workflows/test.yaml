name: Run Tests

on:
  push:
    branches: [main, develop]
  pull_request:
    branches: [main]
  workflow_dispatch:

env:
  NODE_VERSION: 18

jobs:
  # Frontend testing
  frontend-tests:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install frontend dependencies
        run: |
          cd frontend
          npm ci

      - name: Run frontend unit tests
        run: |
          cd frontend
          npm test
        env:
          CI: true

      - name: Run frontend linting
        run: |
          cd frontend
          npm run lint

      - name: Upload frontend test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: frontend-coverage
          path: frontend/coverage/

  # Backend testing
  backend-tests:
    runs-on: ubuntu-latest
    services:
      # MongoDB for testing
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install backend dependencies
        run: |
          cd backend
          npm ci

      - name: Run backend unit tests
        run: |
          cd backend
          npm test
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/test_db
          JWT_SECRET: test-jwt-secret

      - name: Run backend integration tests
        run: |
          cd backend
          npm run test:integration
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/test_db
          JWT_SECRET: test-jwt-secret

      - name: Run backend linting
        run: |
          cd backend
          npm run lint

      - name: Upload backend test coverage
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: backend-coverage
          path: backend/coverage/

  # End-to-end testing (basic)
  e2e-tests:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests]
    services:
      mongodb:
        image: mongo:7.0
        ports:
          - 27017:27017

    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: ${{ env.NODE_VERSION }}

      - name: Install dependencies
        run: |
          cd frontend && npm ci
          cd ../backend && npm ci

      - name: Start backend server
        run: |
          cd backend
          npm start &
          sleep 10
        env:
          NODE_ENV: test
          MONGODB_URI: mongodb://localhost:27017/e2e_test_db
          JWT_SECRET: test-jwt-secret
          PORT: 3000

      - name: Start frontend server
        run: |
          cd frontend
          npm run dev &
          sleep 10
        env:
          VITE_API_URL: http://localhost:3000

      - name: Wait for servers to be ready
        run: |
          # Simple check to see if servers are running
          for i in {1..10}; do
            if curl -f http://localhost:3000/ && curl -f http://localhost:5173/; then
              echo "Both servers are ready!"
              break
            fi
            echo "Waiting for servers... ($i/10)"
            sleep 5
          done

      - name: Run Cypress E2E tests
        run: |
          cd frontend
          npm run test:e2e
        env:
          CYPRESS_baseUrl: http://localhost:5173

      - name: Upload E2E test videos
        uses: actions/upload-artifact@v4
        if: failure()
        with:
          name: cypress-videos
          path: frontend/cypress/videos/

  # Test summary
  test-summary:
    runs-on: ubuntu-latest
    needs: [frontend-tests, backend-tests, e2e-tests]
    if: always()
    steps:
      - name: Create test summary
        run: |
          echo "## Test Results Summary" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          echo "| Test Suite | Status |" >> $GITHUB_STEP_SUMMARY
          echo "|------------|--------|" >> $GITHUB_STEP_SUMMARY
          echo "| Frontend Tests | ${{ needs.frontend-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| Backend Tests | ${{ needs.backend-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "| E2E Tests | ${{ needs.e2e-tests.result }} |" >> $GITHUB_STEP_SUMMARY
          echo "" >> $GITHUB_STEP_SUMMARY
          
          # Check overall status
          if [ "${{ needs.frontend-tests.result }}" = "success" ] && \
             [ "${{ needs.backend-tests.result }}" = "success" ] && \
             [ "${{ needs.e2e-tests.result }}" = "success" ]; then
            echo "**All tests passed!** Ready for deployment." >> $GITHUB_STEP_SUMMARY
          else
            echo "**Some tests failed.** Please check the logs and fix issues." >> $GITHUB_STEP_SUMMARY
          fi